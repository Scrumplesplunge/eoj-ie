{"version":3,"file":"user-main.js","mappings":"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","sources":["webpack://space-race/./src/constants.ts","webpack://space-race/./src/math.ts","webpack://space-race/webpack/bootstrap","webpack://space-race/./src/user-main.ts"],"sourcesContent":["// Dimensions of the rocket.\nexport const ROCKET_WIDTH = 10;     // Diameter of the rocket, in metres.\nexport const ROCKET_HEIGHT = 50;    // Height of the rocket, in metres.\n\n// The mass of the rocket, excluding the mass of any fuel it is carrying.\nexport const ROCKET_MASS =\n    2000 * Math.PI * ROCKET_WIDTH ** 2 * ROCKET_HEIGHT / 4;\n\n// The initial amount of fuel, of each type, in kg.\nexport const FUEL = 10000000;\nexport const RCS_FUEL = 10000;\n\n// The maximum thrust of the rocket thrusters, in kgm/s^2.\nexport const ROCKET_THRUST = 2e9;\nexport const RCS_THRUST = 2e6;\n\n// The maximum angle of the main thruster, relative to the rocket's orientation.\nexport const MAX_ROCKET_THRUSTER_ANGLE = 1;\n\n// Given the target:\n//\n//   Orbit time:     2 minutes\n//   Orbit speed: 1000 m/s\n//\n// We can derive:\n//\n//   Orbit circumference = 1000 m/s * 2 minutes = 120 km\n//   Orbit radius = 120km / (2 * PI) ~= 19km\n//   Gravity = (1000 m/s)^2 * (120km / (2 * PI)) ~= 19 Mm^3/s^2\n//\n// Thus, PLANET_RADIUS + ATMOSPHERE_SIZE should be just under 19km.\nexport const GRAVITY = 1e3 ** 2 * 120e3 / (2 * Math.PI);\nexport const PLANET_RADIUS = 15000;  // Radius of the planet, in metres.\nexport const ATMOSPHERE_SIZE = 4000;  // Height of the atmosphere, in metres.\n\n// The speed of radio transmissions, in metres per second.\nexport const TRANSMISSION_SPEED = 30000;\n\n// How long it takes for the planet to do a full rotation.\nexport const PLANET_DAY = 3600;\n\n// The amount of time between consecutive simulation ticks, in seconds.\nexport const DELTA_TIME = 1/128;\n\n// The amount of time between consecutive sensor samples, in seconds.\nexport const SENSOR_TIME = 1/16;\n","export class Vector {\n  // Constructs a random vector with a two-dimensional normal distribution.\n  static random() {\n    const r = Math.sqrt(-2 * Math.log(1 - Math.random()));\n    const theta = 2 * Math.PI * Math.random();\n    return new Vector(r * Math.cos(theta), r * Math.sin(theta));\n  }\n\n  // Constructs a unit vector from an angle.\n  static fromAngle(radians) {\n    return new Vector(Math.cos(radians), Math.sin(radians));\n  }\n\n  x: number;\n  y: number;\n\n  // A vector can be constructed from any vector-like object.\n  constructor(v: {x: number, y: number});\n\n  // A vector can be constructed from two numbers.\n  constructor(x: number, y: number);\n\n  constructor(a: {x: number, y: number} | number, b?: number) {\n    if (typeof a === 'number') {\n      this.x = a;\n      this.y = b;\n    } else {\n      this.x = a.x;\n      this.y = a.y;\n    }\n  }\n\n  toAngle(): number { return Math.atan2(this.y, this.x) }\n  neg(): Vector { return new Vector(-this.x, -this.y) }\n  add(v: Vector): Vector { return new Vector(this.x + v.x, this.y + v.y) }\n  sub(v: Vector): Vector { return new Vector(this.x - v.x, this.y - v.y) }\n  mul(s: number): Vector { return new Vector(this.x * s, this.y * s) }\n  dot(v: Vector): number { return this.x * v.x + this.y * v.y }\n  cross(v: Vector): number { return this.x * v.y - this.y * v.x }\n  len(): number { return Math.sqrt(this.dot(this)) }\n  rot90(): Vector { return new Vector(-this.y, this.x) }\n  norm(): Vector { return this.mul(1 / this.len()) }\n}\n\nexport class Matrix {\n  static rotate(theta: number): Matrix {\n    const c = Math.cos(theta), s = Math.sin(theta);\n    return new Matrix(new Vector(c, s), new Vector(-s, c));\n  }\n\n  static fromRows(a: Vector, b: Vector): Matrix {\n    return new Matrix(new Vector(a.x, b.x), new Vector(a.y, b.y));\n  }\n\n  constructor(public a: Vector, public b: Vector) {}\n\n  apply(v: Vector): Vector { return this.a.mul(v.x).add(this.b.mul(v.y)) }\n\n  determinant(): number {\n    return this.a.cross(this.b);\n  }\n\n  inverse(): Matrix {\n    const d = this.determinant();\n    if (d == 0) throw new Error('Inverting a non-invertible matrix');\n    const k = 1 / d;\n    return new Matrix(new Vector(k * this.b.y, k * -this.a.y),\n                      new Vector(k * -this.b.x, k * this.a.x));\n  }\n}\n\nconst PI = Math.PI;\nconst TAU = 2 * PI;\n\nexport function angnorm(x: number): number {\n  return ((x + PI) % TAU + TAU) % TAU - PI;\n}\n","// The module cache\nvar __webpack_module_cache__ = {};\n\n// The require function\nfunction __webpack_require__(moduleId) {\n\t// Check if module is in cache\n\tvar cachedModule = __webpack_module_cache__[moduleId];\n\tif (cachedModule !== undefined) {\n\t\treturn cachedModule.exports;\n\t}\n\t// Create a new module (and put it into the cache)\n\tvar module = __webpack_module_cache__[moduleId] = {\n\t\t// no module.id needed\n\t\t// no module.loaded needed\n\t\texports: {}\n\t};\n\n\t// Execute the module function\n\t__webpack_modules__[moduleId](module, module.exports, __webpack_require__);\n\n\t// Return the exports of the module\n\treturn module.exports;\n}\n\n","import type * as api from './api';\nimport * as constants from './constants';\nimport * as math from './math';\n\n// Export all of the constants and math utilities to the global scope.\nObject.assign(self, {...constants, ...math});\n"],"names":["ROCKET_WIDTH","ROCKET_HEIGHT","ROCKET_MASS","Math","PI","FUEL","RCS_FUEL","ROCKET_THRUST","RCS_THRUST","MAX_ROCKET_THRUSTER_ANGLE","GRAVITY","PLANET_RADIUS","ATMOSPHERE_SIZE","TRANSMISSION_SPEED","PLANET_DAY","DELTA_TIME","SENSOR_TIME","Vector","constructor","a","b","this","x","y","static","r","sqrt","log","random","theta","cos","sin","radians","toAngle","atan2","neg","add","v","sub","mul","s","dot","cross","len","rot90","norm","Matrix","c","apply","determinant","inverse","d","Error","k","TAU","__webpack_module_cache__","__webpack_require__","moduleId","cachedModule","undefined","exports","module","__webpack_modules__","Object","assign","self","constants","math"],"sourceRoot":""}